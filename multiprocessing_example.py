import multiprocessing
import requests
import time


# ----------- –ù–ê–°–¢–†–û–ô–ö–ò -----------

NUM_WORKERS = 3
urls = ["https://deelay.me/2000/https://example.com"] * 5

# ----------- –ì–õ–û–ë–ê–õ–¨–ù–´–ï –û–ë–™–ï–ö–¢–´ -----------

task_queue = multiprocessing.JoinableQueue()
done_event = multiprocessing.Event()
print_lock = multiprocessing.Lock()  # —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞–ª–∏—Å—å –≤—ã–≤–æ–¥—ã

# ----------- –†–ê–ë–û–ß–ò–ô –ü–†–û–¶–ï–°–° -----------

def worker():
    while True:
        url = task_queue.get()
        if url is None:
            task_queue.task_done()
            break

        with print_lock:
            print(f"[{multiprocessing.current_process().name}] üîÑ –ù–∞—á–∞–ª –∑–∞–≥—Ä—É–∑–∫—É: {url}")

        try:
            response = requests.get(url)
            status = response.status_code
        except Exception as e:
            status = f"–û—à–∏–±–∫–∞: {e}"

        with print_lock:
            print(f"[{multiprocessing.current_process().name}] ‚úÖ –ó–∞–≤–µ—Ä—à–∏–ª: {url} [{status}]")

        task_queue.task_done()

# ----------- –£–í–ï–î–û–ú–ò–¢–ï–õ–¨ –û –ó–ê–í–ï–†–®–ï–ù–ò–ò -----------

def notify_when_done():
    task_queue.join()
    done_event.set()

# ----------- –ó–ê–ü–£–°–ö -----------

def main():
    start = time.time()

    # –°–æ–∑–¥–∞—ë–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Ä–∫–µ—Ä—ã
    processes = []
    for i in range(NUM_WORKERS):
        p = multiprocessing.Process(target=worker, name=f"Worker-{i+1}")
        p.start()
        processes.append(p)

    notifier = multiprocessing.Process(target=notify_when_done)
    notifier.start()

    # –ö–ª–∞–¥—ë–º –∑–∞–¥–∞—á–∏ –≤ –æ—á–µ—Ä–µ–¥—å
    for url in urls:
        task_queue.put(url)

    # –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    done_event.wait()
    with print_lock:
        print("‚úÖ –í—Å–µ –∑–∞–¥–∞—á–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")

    # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
    for _ in processes:
        task_queue.put(None)

    for p in processes:
        p.join()

    notifier.join()

    print(f"‚è± –û–±—â–µ–µ –≤—Ä–µ–º—è: {round(time.time() - start, 2)} —Å–µ–∫.")

# ----------- –°–¢–ê–†–¢ –ü–†–û–ì–†–ê–ú–ú–´ -----------

if __name__ == "__main__":
    main()
